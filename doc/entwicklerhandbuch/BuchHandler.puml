' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.
@startuml Handler-Funktionen und Handler-Klasse

!pragma useNewPackage
skinparam classAttributeIconSize 0
skinparam componentStyle uml2

interface Promise<T>

package express {
  package core {
    interface Express
  }

  class "express()" as express
  hide express circle

  interface Request
  interface Response
}

class App <<boudary>> {
  + readonly app: Express
}
App ..> Express
App ..> express

package rezept {
  package entity {
    interface RezeptData <<entity>> {
    }
  }

  package service {
    class RezeptService << control >> {
    }
  }

  package rest #DDDDDD {
    "Handler Functions" .right.> Request
    "Handler Functions" ..> Response
    "Handler Functions" ..> Promise
    "Handler Functions" ..> RezeptHandler

    RezeptHandler o--> "1" RezeptService : service
    RezeptHandler .right.> Request
    RezeptHandler ..> Response
    RezeptHandler ..> RezeptData
    RezeptHandler ..> Promise

    class "Handler Functions" << boundary >> {
      + async findById(req: Request, res: Response): Promise<void>
      + async find(req: Request, res: Response): Promise<void>
      + async create(req: Request, res: Response): Promise<void>
      + async update(req: Request, res: Response): Promise<void>
      + async deleteFn(req: Request, res: Response): Promise<void>
    }
    hide "Handler Functions" << boundary >> circle

    class RezeptHandler << control >> {
      + async findById(req: Request, res: Response): Promise<void>
      + async find(req: Request, res: Response): Promise<void>
      + async create(req: Request, res: Response): Promise<void>
      + async update(req: Request, res: Response): Promise<void>
      + async delete(req: Request, res: Response): Promise<void>
    }
  }
}

App ..> "Handler Functions"

hide empty members

footer (c) Juergen Zimmermann

@enduml
